import pandas as pd
import numpy as np

# Create sample data
data_sales = {
    'Date': pd.to_datetime(['2023-03-18', '2023-03-18', '2023-01-15', '2023-01-25', '2022-12-12', '2022-11-20']),
    'Order_id': [1, 2, 3, 4, 5, 6],
    'Item_id': [101, 102, 103, 104, 101, 105],
    'Customer_id': [1, 2, 1, 3, 2, 4],
    'Quantity': [1, 2, 1, 1, 3, 2],
    'Revenue': [100, 200, 150, 300, 50, 400]
}

data_items = {
    'Item_id': [101, 102, 103, 104, 105],
    'Item_name': ['Widget A', 'Widget B', 'Widget C', 'Widget D', 'Widget E'],
    'Price': [100, 100, 150, 300, 25],
    'Department': ['Toys', 'Toys', 'Electronics', 'Electronics', 'Toys']
}

data_customers = {
    'Customer_id': [1, 2, 3, 4],
    'first_name': ['John', 'Doe', 'Jane', 'Doe'],
    'last_name': ['Doe', 'Smith', 'Doe', 'Johnson'],
    'Address': ['123 Elm St', '456 Oak St', '789 Pine St', '135 Maple St']
}

# Creating DataFrames
df_sales = pd.DataFrame(data_sales)
df_items = pd.DataFrame(data_items)
df_customers = pd.DataFrame(data_customers)

# Query 1: Total number of orders completed on 18th March 2023
total_orders_march_18 = df_sales[df_sales['Date'] == '2023-03-18'].shape[0]
print("Total orders on 18th March 2023:", total_orders_march_18)

# Query 2: Total number of orders completed on 18th March 2023 with first name 'John' and last name 'Doe'
john_doe_orders = df_sales[
    (df_sales['Date'] == '2023-03-18') &
    (df_sales['Customer_id'].isin(df_customers[(df_customers['first_name'] == 'John') & (df_customers['last_name'] == 'Doe')]['Customer_id']))
]
total_john_doe_orders = john_doe_orders.shape[0]
print("Total orders for John Doe on 18th March 2023:", total_john_doe_orders)

# Query 3: Total number of customers that purchased in January 2023 and average amount spent per customer
january_purchases = df_sales[df_sales['Date'].dt.month == 1]
total_customers_january = january_purchases['Customer_id'].nunique()
average_spent_per_customer = january_purchases['Revenue'].sum() / total_customers_january if total_customers_january > 0 else 0
print("Total customers in January 2023:", total_customers_january)
print("Average amount spent per customer in January 2023:", average_spent_per_customer)

# Query 4: Departments that generated less than $600 in 2022
df_sales['Year'] = df_sales['Date'].dt.year
revenue_by_department = df_sales[df_sales['Year'] == 2022].merge(df_items, on='Item_id').groupby('Department')['Revenue'].sum()
departments_below_600 = revenue_by_department[revenue_by_department < 600].index.tolist()
print("Departments that generated less than $600 in 2022:", departments_below_600)

# Query 5: Most and least revenue generated by an order
most_revenue_order = df_sales['Revenue'].max()
least_revenue_order = df_sales['Revenue'].min()
print("Most revenue generated by an order:", most_revenue_order)
print("Least revenue generated by an order:", least_revenue_order)

# Query 6: Orders that were purchased in our most lucrative order
most_lucrative_order_id = df_sales.loc[df_sales['Revenue'].idxmax(), 'Order_id']
most_lucrative_order_details = df_sales[df_sales['Order_id'] == most_lucrative_order_id]
print("Orders in the most lucrative order (Order ID: {}):".format(most_lucrative_order_id))
print(most_lucrative_order_details)
